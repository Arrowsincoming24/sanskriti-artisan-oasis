
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. */

@layer base {
  :root {
    --background: 32 32% 96%;
    --foreground: 20 14% 14%;

    --card: 0 0% 100%;
    --card-foreground: 20 14% 14%;

    --popover: 0 0% 100%;
    --popover-foreground: 20 14% 14%;

    --primary: 17 88% 47%;
    --primary-foreground: 0 0% 98%;

    --secondary: 43 74% 70%;
    --secondary-foreground: 20 14% 14%;

    --muted: 43 74% 95%;
    --muted-foreground: 25 5% 45%;

    --accent: 142 76% 36%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 25 5% 85%;
    --input: 25 5% 85%;
    --ring: 17 88% 47%;

    --radius: 0.75rem;
  }

  .dark {
    --background: 20 14% 4.1%;
    --foreground: 0 0% 95%;

    --card: 20 14% 4.1%;
    --card-foreground: 0 0% 95%;

    --popover: 20 14% 4.1%;
    --popover-foreground: 0 0% 95%;

    --primary: 20.9 90% 48.2%;
    --primary-foreground: 60 9.1% 97.8%;

    --secondary: 12 6.5% 15.1%;
    --secondary-foreground: 0 0% 95%;

    --muted: 12 6.5% 15.1%;
    --muted-foreground: 24 5.4% 63.9%;

    --accent: 12 6.5% 15.1%;
    --accent-foreground: 0 0% 95%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 95%;

    --border: 12 6.5% 15.1%;
    --input: 12 6.5% 15.1%;
    --ring: 20.9 90% 48.2%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
  }

  h1, h2, h3, h4 {
    @apply font-cultural;
  }
}

@layer components {
  .cultural-pattern {
    background-image: radial-gradient(circle at 1px 1px, rgba(235, 106, 68, 0.1) 1px, transparent 0);
    background-size: 20px 20px;
  }

  .hero-gradient {
    background: linear-gradient(135deg, #fef7f3 0%, #fdece1 35%, #fad4c0 100%);
  }

  .craft-card {
    @apply bg-card rounded-lg shadow-sm border border-border/50 overflow-hidden hover:shadow-md transition-all duration-300 hover:-translate-y-1;
  }

  .artisan-badge {
    @apply bg-gradient-to-r from-golden-400 to-golden-600 text-white px-3 py-1 rounded-full text-sm font-medium;
  }

  .authentic-badge {
    @apply bg-gradient-to-r from-forest-400 to-forest-600 text-white px-3 py-1 rounded-full text-sm font-medium;
  }
}
</lov-css>

Now, let me create the core layout and navigation components:

<lov-write file_path="src/components/Layout/Header.tsx">
import React, { useState } from 'react';
import { Search, User, ShoppingBag, Heart, Menu, X } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';

const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [cartCount] = useState(3);

  const navLinks = [
    { label: 'Artisans', href: '/artisans' },
    { label: 'Marketplace', href: '/marketplace' },
    { label: 'Impact', href: '/impact' },
    { label: 'Learn', href: '/learn' },
    { label: 'About', href: '/about' }
  ];

  return (
    <header className="bg-white/95 backdrop-blur-sm border-b border-border/50 sticky top-0 z-50">
      <div className="container mx-auto px-4">
        {/* Top bar with language selector and quick links */}
        <div className="flex justify-between items-center py-2 text-sm border-b border-border/30">
          <div className="flex items-center space-x-4">
            <select className="bg-transparent text-muted-foreground">
              <option>English</option>
              <option>हिंदी</option>
              <option>বাংলা</option>
            </select>
            <span className="text-muted-foreground">Free shipping on orders ₹2000+</span>
          </div>
          <div className="hidden md:flex items-center space-x-4 text-muted-foreground">
            <a href="/help">Help</a>
            <a href="/track">Track Order</a>
          </div>
        </div>

        {/* Main navigation */}
        <div className="flex items-center justify-between py-4">
          {/* Logo */}
          <div className="flex items-center">
            <h1 className="text-2xl font-cultural font-bold text-terracotta-600">
              SANSKRITI
            </h1>
            <span className="ml-2 text-xs text-muted-foreground hidden sm:block">
              सांस्कृति
            </span>
          </div>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center space-x-8">
            {navLinks.map((link) => (
              <a
                key={link.label}
                href={link.href}
                className="text-foreground hover:text-terracotta-600 transition-colors font-medium"
              >
                {link.label}
              </a>
            ))}
          </nav>

          {/* Search and Actions */}
          <div className="flex items-center space-x-4">
            {/* Search - Hidden on mobile */}
            <div className="hidden lg:flex items-center">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
                <Input
                  placeholder="Search crafts, artisans..."
                  className="pl-10 w-64"
                />
              </div>
            </div>

            {/* Action buttons */}
            <div className="flex items-center space-x-2">
              <Button variant="ghost" size="icon" className="relative">
                <Heart className="h-5 w-5" />
              </Button>
              <Button variant="ghost" size="icon">
                <User className="h-5 w-5" />
              </Button>
              <Button variant="ghost" size="icon" className="relative">
                <ShoppingBag className="h-5 w-5" />
                {cartCount > 0 && (
                  <Badge className="absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs bg-terracotta-500">
                    {cartCount}
                  </Badge>
                )}
              </Button>

              {/* Mobile menu button */}
              <Button
                variant="ghost"
                size="icon"
                className="md:hidden"
                onClick={() => setIsMenuOpen(!isMenuOpen)}
              >
                {isMenuOpen ? (
                  <X className="h-5 w-5" />
                ) : (
                  <Menu className="h-5 w-5" />
                )}
              </Button>
            </div>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="md:hidden border-t border-border/30 py-4 animate-slide-in">
            <div className="flex flex-col space-y-4">
              {/* Mobile search */}
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
                <Input
                  placeholder="Search crafts, artisans..."
                  className="pl-10"
                />
              </div>

              {/* Mobile nav links */}
              {navLinks.map((link) => (
                <a
                  key={link.label}
                  href={link.href}
                  className="text-foreground hover:text-terracotta-600 transition-colors font-medium py-2"
                  onClick={() => setIsMenuOpen(false)}
                >
                  {link.label}
                </a>
              ))}
            </div>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;
